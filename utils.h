#ifndef UNTILS_H
#define UNTILS_H


 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// VoidPtrToUINT64
///
/// @brief
///
/// @param
///
/// @return
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>
#include<string.h>
#include <fcntl.h>
#include <utils/Log.h> 
#include <unistd.h>
#include <errno.h>
#include "utils.h"
#include "types.h"

 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// StrError
///
/// @brief get linux error
///
/// @param  see
///
/// @return None
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 VOID StrError(
 CHAR*   pErrorMsg,
 SIZE_T  errorMsgSize,
 INT     errorNum);

 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// VoidPtrToUINT64
///
/// @brief prtToUNINT64
///
/// @param  see
///
/// @return None
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
inline  UINT64 VoidPtrToUINT64(void* pVoid)
{
    return static_cast<UINT64>(reinterpret_cast<SIZE_T>(pVoid));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// VSNPrintf
///
/// @brief
///
/// @param
///
/// @return
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline INT VSNPrintf(
    CHAR*       pDst,
    SIZE_T      sizeDst,
    const CHAR* pFormat,
    va_list     argptr
)
{
    INT numCharWritten = 0;
    numCharWritten = vsnprintf(pDst, sizeDst, pFormat, argptr);
    return numCharWritten;
}
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// SNPrintF
///
/// @brief prtToUNINT64
///
/// @param  see
///
/// @return None
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
inline INT SNPrintF(
    CHAR* pDst,
    SIZE_T sizeDst,
    const CHAR* pFormat,
    ...
)
{
    INT numCHARWriten;
    va_list args;
    va_start (args, pFormat);
    numCHARWriten  = VSNPrintf(pDst, sizeDst, pFormat, args);
    va_end(args);
    return numCHARWriten;
}




#endif